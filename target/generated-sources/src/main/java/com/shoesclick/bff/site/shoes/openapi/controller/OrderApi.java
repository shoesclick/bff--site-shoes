/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.shoesclick.bff.site.shoes.openapi.controller;

import com.shoesclick.bff.site.shoes.openapi.model.domain.OrderRequest;
import com.shoesclick.bff.site.shoes.openapi.model.domain.OrderResponse;
import com.shoesclick.bff.site.shoes.openapi.model.domain.OrderStatusRequest;
import com.shoesclick.bff.site.shoes.openapi.model.domain.StatusResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-03-09T22:40:33.463755800-03:00[America/Sao_Paulo]")
@Validated
@Tag(name = "Order", description = "the Order API")
public interface OrderApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /api/order/{id} : Obtem o Pedido pelo Id
     * Obtem o Pedido pelo Id
     *
     * @param id Identificador do elemento (required)
     * @return SUCESSO (status code 200)
     */
    @Operation(
        operationId = "findById",
        summary = "Obtem o Pedido pelo Id",
        description = "Obtem o Pedido pelo Id",
        tags = { "Order" },
        responses = {
            @ApiResponse(responseCode = "200", description = "SUCESSO", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrderResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/order/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<OrderResponse> _findById(
        @Parameter(name = "id", description = "Identificador do elemento", required = true, in = ParameterIn.PATH) @PathVariable("id") java.lang.Long id
    ) {
        return findById(id);
    }

    // Override this method
    default  ResponseEntity<OrderResponse> findById(java.lang.Long id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"id\" : 1, \"status\" : 1, \"idCustomer\" : 1, \"createdAt\" : \"2020-08-17T10:11:16.908732\", \"paymentType\" : \"PIX_PAYMENT\", \"paymentParams\" : { \"keyCode\" : \"1231232132131212312312312312312123\" }, \"orderItems\" : [ { \"idProduct\" : 1 }, { \"idProduct\" : 3 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/order/list/{idCustomer}
     *
     * @param idCustomer Identificador do Cliente (required)
     * @return SUCESSO (status code 200)
     */
    @Operation(
        operationId = "listByCustomer",
        tags = { "Order" },
        responses = {
            @ApiResponse(responseCode = "200", description = "SUCESSO", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = OrderResponse.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/order/list/{idCustomer}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<OrderResponse>> _listByCustomer(
        @Parameter(name = "idCustomer", description = "Identificador do Cliente", required = true, in = ParameterIn.PATH) @PathVariable("idCustomer") java.lang.Long idCustomer
    ) {
        return listByCustomer(idCustomer);
    }

    // Override this method
    default  ResponseEntity<List<OrderResponse>> listByCustomer(java.lang.Long idCustomer) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"id\" : 1, \"status\" : 1, \"idCustomer\" : 1, \"createdAt\" : \"2020-08-17T10:11:16.908732\", \"paymentType\" : \"PIX_PAYMENT\", \"paymentParams\" : { \"keyCode\" : \"1231232132131212312312312312312123\" }, \"orderItems\" : [ { \"idProduct\" : 1 }, { \"idProduct\" : 3 } ] }, { \"id\" : 1, \"status\" : 1, \"idCustomer\" : 1, \"createdAt\" : \"2020-08-17T10:11:16.908732\", \"paymentType\" : \"PIX_PAYMENT\", \"paymentParams\" : { \"keyCode\" : \"1231232132131212312312312312312123\" }, \"orderItems\" : [ { \"idProduct\" : 1 }, { \"idProduct\" : 3 } ] } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /api/order/save
     *
     * @param orderRequest  (optional)
     * @return SUCESSO (status code 201)
     */
    @Operation(
        operationId = "save",
        tags = { "Order" },
        responses = {
            @ApiResponse(responseCode = "201", description = "SUCESSO", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = StatusResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/order/save",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<StatusResponse> _save(
        @Parameter(name = "OrderRequest", description = "") @Valid @RequestBody(required = false) OrderRequest orderRequest
    ) {
        return save(orderRequest);
    }

    // Override this method
    default  ResponseEntity<StatusResponse> save(OrderRequest orderRequest) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"description\" : \"SUCESSO\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /api/order/{id}/status : Obtem o Pedido pelo Id
     * Obtem o Pedido pelo Id
     *
     * @param id Identificador do elemento (required)
     * @param orderStatusRequest  (optional)
     * @return SUCESSO (status code 200)
     */
    @Operation(
        operationId = "updateStatus",
        summary = "Obtem o Pedido pelo Id",
        description = "Obtem o Pedido pelo Id",
        tags = { "Order" },
        responses = {
            @ApiResponse(responseCode = "200", description = "SUCESSO", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = StatusResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/order/{id}/status",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<StatusResponse> _updateStatus(
        @Parameter(name = "id", description = "Identificador do elemento", required = true, in = ParameterIn.PATH) @PathVariable("id") java.lang.Long id,
        @Parameter(name = "OrderStatusRequest", description = "") @Valid @RequestBody(required = false) OrderStatusRequest orderStatusRequest
    ) {
        return updateStatus(id, orderStatusRequest);
    }

    // Override this method
    default  ResponseEntity<StatusResponse> updateStatus(java.lang.Long id, OrderStatusRequest orderStatusRequest) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"description\" : \"SUCESSO\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
